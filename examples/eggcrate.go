package main

import (
    "fmt"
    "github.com/devplayg/eggcrate"
    "github.com/gorilla/mux"
    "log"
    "net/http"
    "net/url"
)

/*
/gohome/assets
|-- css
|   |-- app.bundle.css
|   |-- themes
|   |   |-- cust-theme-1.css
|   |   |-- cust-theme-2.css
|   |   `-- cust-theme-3.css.map
|   `-- vendors.bundle.css.map
|-- js
|   |-- app.bundle.js
|   |-- toastr.js
|   `-- vendors.bundle.js
`-- webfonts
    |-- summernote.eot
    |-- summernote.ttf
    `-- summernote.woff
*/

var fileMap map[string][]byte

func main() {
    encode()
    //decode()
}

func encode() {
    config := eggcrate.Config{
        Dir:        "/gohome/assets",
        OutFile:    "data.go",
        UriPrefix:  "/assets",
        Extensions: "js,png,css,eot,svg,ttf,woff,woff2,js,html", //
    }
    _, err := eggcrate.Encode(&config)
    if err != nil {
        fmt.Printf(err.Error())
    }
}

func decode() {
    //var err error
    //fileMap, err = eggcrate.Decode(assetData) // "assetData" is generated by "encode" function
    //if err != nil {
    //	fmt.Printf("failed to decode string")
    //	return
    //}
    //go startHttpServer()
    //fmt.Scanln()
}

func startHttpServer() {
    r := mux.NewRouter()
    r.HandleFunc("/assets/{d1}/{d2}", AssetHandler)
    r.HandleFunc("/assets/{d1}/{d2}/{d3}", AssetHandler)

    http.Handle("/", r)
    srv := &http.Server{
        Handler: r,
        Addr:    "127.0.0.1:8000",
    }
    log.Fatal(srv.ListenAndServe())
}

func AssetHandler(w http.ResponseWriter, r *http.Request) {
    u, _ := url.Parse(r.RequestURI)
    val, ok := fileMap[u.Path]
    if !ok {
        return
    }
    w.Header().Set("Content-Type", "text/javascript;charset=UTF-8")
    w.Header().Set("Content-Encoding", "gzip")
    w.WriteHeader(http.StatusOK)
    w.Write(val)
}